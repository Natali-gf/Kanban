module.exports = {
  root: true,
  env: { browser: true, es2020: true, node: true },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react-hooks/recommended',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'plugin:prettier/recommended',
    'prettier',
  ],
  ignorePatterns: ['dist'],
  parser: '@typescript-eslint/parser',
  plugins: ['react-refresh', 'import'],
  settings: {
    'import/resolver': {
      typescript: {
        project: './tsconfig.json',
      },
    },
  },
  rules: {
    'import/no-unresolved': 'error',
    'import/prefer-default-export': 'off',
    'import/no-named-as-default-member': 'off',
    // 'import/no-default-export': 'warn',
    'import/order': [
      'warn',
      {
        groups: [
          'builtin',
          'external',
          'internal',
          ['sibling', 'parent'],
          'index',
          'type',
          'unknown',
        ],
        'newlines-between': 'always',
        alphabetize: {
          order: 'asc',
          caseInsensitive: true,
        },
      },
    ],
    'react-refresh/only-export-components': ['warn', { allowConstantExport: true }],
    'react/no-children-prop': 'off',
    'react/prop-types': 'off',
    'react/react-in-jsx-scope': 'off',
    'max-len': [
      'warn',
      {
        code: 90,
        tabWidth: 2,
        ignoreComments: true,
        ignoreRegExpLiterals: true,
        ignoreTemplateLiterals: true,
        ignoreUrls: true,
        ignoreStrings: true,
      },
    ],
    '@typescript-eslint/no-unused-vars': 'warn',
    semi: ['warn', 'always'],
    'no-duplicate-imports': ['warn', { includeExports: true }],
    'no-console': ['warn', { allow: ['warn', 'error'] }],
    'no-empty-function': 'warn',
    'no-implicit-globals': 'warn',
    'no-magic-numbers': 'warn',
    'no-var': 'error',
    'prefer-const': 'warn',
    'arrow-spacing': ['warn', { before: true, after: true }],
    'block-spacing': 'warn',
    'brace-style': 'warn',
    'comma-spacing': ['warn', { before: false, after: true }],
    'comma-style': ['warn', 'last'],
    'computed-property-spacing': ['warn', 'never'],
    'dot-location': ['warn', 'property'],
    'max-statements-per-line': ['warn', { max: 1 }],
    'newline-per-chained-call': ['warn', { ignoreChainWithDepth: 2 }],
    'no-mixed-spaces-and-tabs': ['warn', 'smart-tabs'],
    'no-multi-spaces': 'warn',
    'no-multiple-empty-lines': ['warn', { max: 2, maxEOF: 1, maxBOF: 0 }],
    'no-whitespace-before-property': 'warn',
    'nonblock-statement-body-position': ['warn', 'beside'],
    'padding-line-between-statements': [
      'warn',
      { blankLine: 'always', prev: '*', next: 'return' },
    ],
    quotes: ['warn', 'single', { avoidEscape: true }],
    'jsx-quotes': ['warn', 'prefer-single'],
    'rest-spread-spacing': ['warn', 'never'],
    'semi-spacing': ['warn', { before: false, after: true }],
    'space-before-blocks': 'warn',
    'space-before-function-paren': [
      'warn',
      { anonymous: 'always', named: 'never', asyncArrow: 'always' },
    ],
    'space-in-parens': ['warn', 'never'],
    'space-infix-ops': 'warn',
    'space-unary-ops': [
      'warn',
      {
        words: true,
        nonwords: false,
      },
    ],
    'switch-colon-spacing': ['warn', { after: true, before: false }],
    '@stylistic/js/wrap-regex': 'off',
    'prettier/prettier': [
      'warn',
      {
        semi: true,
        jsxSingleQuote: true,
        singleQuote: true,
        bracketSpacing: true,
        trailingComma: 'es5',
        printWidth: 90,
        tabWidth: 2,
        arrowParrens: 'always',
        endOfLine: 'auto',
        quoteProps: 'as-needed',
        bracketSameLine: true,
        proseWrap: 'preserve',
        insertPragma: false,
        requirePragma: false,
      },
    ],
  },
};
